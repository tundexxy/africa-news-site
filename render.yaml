# render.yaml
# This file defines the services for your Django application on Render.

# Defines the PostgreSQL database service
databases:
  - name: mysitedb # A logical name for your database service within Render
    plan: free # Use the free tier for the database (suitable for testing/small projects)
    databaseName: mysite_db # The actual name of the database that will be created
    user: mysite_user # The database user for your application

# Defines the web service (your Django application)
services:
  - type: web # This specifies it's a web service that serves HTTP requests
    name: africa-news-site # A unique name for your web service on Render (this will be part of your .onrender.com URL)
    runtime: python # Specify the runtime environment (Python for Django)
    
    # Command to run during the build process (e.g., install dependencies, run migrations, collect static files)
    buildCommand: './build.sh' # Points to the build script we just created

    # Command to start your Django application in production
    # 'mysite.wsgi:application' refers to your project's WSGI application object
    # Gunicorn is the WSGI server that will run your Django app
    startCommand: 'gunicorn mysite.wsgi:application'
    
    # Environment variables for your web service
    envVars:
      - key: DATABASE_URL # Render automatically provides this connection string for the linked database
        fromDatabase:
          name: mysitedb # Refers to the database service defined above
          property: connectionString
      - key: SECRET_KEY # Django's SECRET_KEY for security
        generateValue: true # Render will automatically generate a strong, random secret key for you
      - key: WEB_CONCURRENCY # Number of Gunicorn workers to run (adjust based on server resources)
        value: 4 # A common value; can be optimized later
      - key: DJANGO_DEBUG # Controls Django's DEBUG setting (False for production)
        value: 'False' # Explicitly set to False for security in production
    
    autoDeploy: true # Automatically deploy a new version when you push changes to your GitHub repository
    
    # Optional: Health check path (Render pings this URL to ensure your app is running)
    # healthCheckPath: /admin/login/ # You can use a simple public path like / or /admin/login/
    
    # Optional: Uncomment and configure if you have a custom domain
    # customDomains:
    #   - yourdomain.com
    #   - www.yourdomain.com